plugins {
    id 'org.springframework.boot' version '2.3.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'com.adarshr.test-logger' version '2.1.0'
    id 'com.github.sherter.google-java-format' version '0.9'
    id "com.github.node-gradle.node" version "2.2.4"
    id 'java'
}

group = 'com.example'
version = '0.0.1'
sourceCompatibility = 11

//Get build info object for get version in code
springBoot {
    buildInfo()
}
//Install node JS for compile documentation of AsyncAPI
node {
    download = true
    version = "12.18.3"
}
task installAsyncApi(type: NpmTask) {
    args = ['install', '@asyncapi/generator@1.0.0-rc.10']
}
task buildAsyncApi(type: NpxTask) {
    command = 'ag'
    args = ['./src/main/resources/asyncapi/callback.yaml', '@asyncapi/html-template', '-o', './static/asyncapi/html', '--force-write']
}
task uninstallAsyncApi(type: Delete) {
    delete "node_modules"
    delete "package-lock.json"
}

//Google formatting tasks
clean.dependsOn(tasks.googleJavaFormat)
verifyGoogleJavaFormat.mustRunAfter(tasks.googleJavaFormat)

//Generation AsyncAPI docs tasks
uninstallAsyncApi.dependsOn(tasks.buildAsyncApi)
buildAsyncApi.dependsOn(tasks.installAsyncApi)
clean.dependsOn(tasks.uninstallAsyncApi)
buildAsyncApi.mustRunAfter(tasks.installAsyncApi)
uninstallAsyncApi.mustRunAfter(tasks.buildAsyncApi)

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.liquibase:liquibase-core'

    implementation 'com.vladmihalcea:hibernate-types-52:2.9.12'
    implementation 'org.apache.commons:commons-pool2:2.8.1'
    implementation 'commons-codec:commons-codec:1.14'
    implementation 'io.lettuce:lettuce-core:5.3.1.RELEASE'
    implementation 'org.springdoc:springdoc-openapi-ui:1.4.6'

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'

    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.amqp:spring-rabbit-test'
}

test {
    useJUnitPlatform()
    testlogger {
        theme 'mocha'
        showExceptions true
        showStackTraces true
        showFullStackTraces false
        showCauses true
        slowThreshold 2000
        showSummary true
        showSimpleNames false
        showPassed true
        showSkipped true
        showFailed true
        showStandardStreams false
        showPassedStandardStreams true
        showSkippedStandardStreams true
        showFailedStandardStreams true
        logLevel 'lifecycle'
    }
}
