spring:
  rabbitmq:
    host: ${MQ_HOST}
    port: ${MQ_PORT}
    username: ${MQ_USER}
    password: ${MQ_PASS}
    listener:
      simple:
        retry:
          enabled: true
          max-attempts: 5
        default-requeue-rejected: false
  output:
    ansi:
      enabled: always
  liquibase:
    changeLog: classpath:db/pg/master-changelog.yaml
    user: ${PG_USER}
    password: ${PG_PASS}
    url: ${PG_HOST}
  datasource:
    url: ${PG_HOST}
    username: ${PG_USER}
    password: ${PG_PASS}
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        show_sql: ${SHOW_SQL}
        format_sql: ${SHOW_SQL}
        use_sql_comments: ${SHOW_SQL}
logging:
  pattern:
    console: '${CONSOLE_LOG_PATTERN:%clr(%d{${LOG_DATEFORMAT_PATTERN:yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(pid:${PID:- }){magenta} %clr(res_id:%X{resId}){yellow} %clr(---){faint} %clr([%t]){faint} %clr(%-5logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}}'
  level:
    #    Disable WARN spam to log when reject message in listener
    #    org.springframework.amqp.rabbit.listener.ConditionalRejectingErrorHandler: ERROR
    #    org.springframework.amqp.rabbit.retry.RejectAndDontRequeueRecoverer: ERROR
    com.example.ems.*: ${LOG_LEVEL}
    org.hibernate.SQL: ${LOG_LEVEL}
    org.hibernate.type: ${LOG_LEVEL}
---
server:
  port: ${PORT}
  tomcat:
    threads:
      max: 10000
---
redis:
  cacheTtl: 600
  luaResPath:
    add: db/redis/lua/add.lua
---
parameters:
  default:
    status: online
  controllers:
    counter:
      rootPath: "/v1/counter"
      getById: "/{userId}"
    status:
      rootPath: "/v1/status"
    type:
      rootPath: "/v1/type"
    user:
      rootPath: "/v1/user"
      update: "/{userId}"
    callback:
      rootPath: "/v1/callback/approve"

